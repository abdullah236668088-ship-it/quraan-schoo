{"version":3,"file":"static/js/518.a51d1437.chunk.js","mappings":"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","sources":["components/CustomModal.js","components/StudentSearchGuest.js"],"sourcesContent":["// src/components/CustomModal.js\r\nimport React, { useEffect, useRef } from 'react';\r\nimport '../Styles/CustomModalStyles.css';\r\n\r\nconst CustomModal = ({ isOpen, title, message, children, onConfirm, onCancel, showCancelButton = true, closeOnOverlayClick = false }) => {\r\n    const modalRef = useRef(null);\r\n\r\n    // Effect to manage focus and keyboard accessibility\r\n    // تأثير لإدارة التركيز وإمكانية الوصول عبر لوحة المفاتيح\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            // Focus the modal content when it opens\r\n            // تركيز محتوى المودال عند فتحه\r\n            modalRef.current?.focus();\r\n\r\n            // Add event listener for Escape key to close modal\r\n            // إضافة مستمع حدث لمفتاح Escape لإغلاق المودال\r\n            const handleEscape = (event) => {\r\n                if (event.key === 'Escape') {\r\n                    onCancel(); // Use onCancel to close the modal\r\n                }\r\n            };\r\n            document.addEventListener('keydown', handleEscape);\r\n\r\n            // Cleanup function to remove event listener\r\n            // دالة تنظيف لإزالة مستمع الحدث\r\n            return () => {\r\n                document.removeEventListener('keydown', handleEscape);\r\n            };\r\n        }\r\n    }, [isOpen, onCancel]);\r\n\r\n    // If modal is not open, return null to render nothing\r\n    // إذا لم يكن المودال مفتوحًا، أعد قيمة null لعدم عرض أي شيء\r\n    if (!isOpen) return null;\r\n\r\n    // Handle overlay click to close modal if allowed\r\n    // معالجة النقر على الخلفية لإغلاق المودال إذا كان مسموحًا\r\n    const handleOverlayClick = (e) => {\r\n        if (closeOnOverlayClick && modalRef.current && !modalRef.current.contains(e.target)) {\r\n            onCancel();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-overlay\" onClick={handleOverlayClick}>\r\n            <div\r\n                className=\"modal-content\"\r\n                ref={modalRef}\r\n                role=\"dialog\" // ARIA role for dialog\r\n                aria-modal=\"true\" // Indicates that the dialog is modal\r\n                aria-labelledby=\"modal-title\" // Links to the title for accessibility\r\n                aria-describedby=\"modal-message\" // Links to the message for accessibility\r\n                tabIndex=\"-1\" // Makes the modal content focusable\r\n            >\r\n                <h3 id=\"modal-title\" className=\"modal-title\">{title}</h3>\r\n                {message && <p id=\"modal-message\" className=\"modal-message\">{message}</p>}\r\n                {children && <div className=\"modal-body\">{children}</div>} {/* عرض المحتوى المخصص */}\r\n                <div className=\"modal-actions\">\r\n                    <button onClick={onConfirm} className=\"modal-confirm-button\">\r\n                        تأكيد\r\n                    </button>\r\n                    {showCancelButton && (\r\n                        <button onClick={onCancel} className=\"modal-cancel-button\">\r\n                            إلغاء\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomModal;\r\n","import React, { useState, useCallback, useReducer } from \"react\";\r\nimport { db } from \"../firebaseConfig\";\r\nimport { collection, query, where, getDocs, orderBy, doc, getDoc } from \"firebase/firestore\";\r\nimport '../Styles/StudentSearchGuestStyles.css'; // استيراد ملف التنسيقات الخارجي\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport {\r\n    Chart as ChartJS, // إعادة تسمية لتجنب التعارض\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n} from 'chart.js';\r\nimport CustomModal from './CustomModal'; // افتراض وجود مودال للرسائل\r\n\r\n// تسجيل مكونات Chart.js اللازمة\r\nChartJS.register(CategoryScale, LinearScale, BarElement, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\n// الحالة الأولية للمكون عند استخدام useReducer\r\nconst initialState = {\r\n    loading: false,\r\n    error: \"\",\r\n    message: \"\",\r\n    student: null,\r\n    allReports: [],\r\n    lastWeekReport: null,\r\n    lastMonthStats: null,\r\n    lastWeekChartData: null,\r\n    lastMonthChartData: null,\r\n    motivationalMessage: \"\",\r\n};\r\n\r\n// Reducer لإدارة حالة البحث المعقدة\r\nfunction searchReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'SEARCH_START':\r\n            return { ...initialState, loading: true };\r\n        case 'SEARCH_SUCCESS':\r\n            return { ...state, loading: false, ...action.payload };\r\n        case 'SEARCH_FAILURE':\r\n            return { ...initialState, loading: false, error: action.payload };\r\n        case 'SEARCH_NOT_FOUND':\r\n            return { ...initialState, loading: false, message: action.payload };\r\n        case 'CLEAR_SEARCH':\r\n            return { ...initialState };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default function StudentSearchGuest() {\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [state, dispatch] = useReducer(searchReducer, initialState);\r\n    const {\r\n        loading, error, message, student, allReports, lastWeekReport,\r\n        lastMonthStats, lastWeekChartData, lastMonthChartData, motivationalMessage\r\n    } = state;\r\n\r\n    // دالة لحساب الرسائل التحفيزية بناءً على الأداء\r\n    // لا تغييرات هنا، الكود جيد\r\n    const getMotivationalMessage = useCallback((stats) => {\r\n        if (!stats) return \"لا توجد بيانات كافية لتقديم رسالة تحفيزية.\";\r\n\r\n        const { averageRating, totalPagesMemorized, totalPartsRevised } = stats;\r\n\r\n        if (averageRating >= 90 && totalPagesMemorized > 0) {\r\n            return \"ما شاء الله! أداء ممتاز ومجهود رائع في الحفظ والمراجعة. استمر في هذا المستوى المتميز!\";\r\n        } else if (averageRating >= 75 && totalPagesMemorized > 0) {\r\n            return \"أداء جيد جدًا! تقدم ملحوظ في الحفظ والمراجعة. حافظ على هذا الزخم وستصل إلى مستويات أعلى.\";\r\n        } else if (averageRating >= 50 && totalPagesMemorized > 0) {\r\n            return \"تقدم جيد. استمر في العمل الجاد وركز على مراجعة ما حفظته لترسيخه بشكل أفضل.\";\r\n        } else {\r\n            return \"ابدأ بخطوات صغيرة وثابتة. كل صفحة وكل آية تحفظها هي إنجاز عظيم. نحن هنا لدعمك!\";\r\n        }\r\n    }, []);\r\n\r\n    // دالة لحساب إحصائيات آخر شهر وتهيئة بيانات الرسم البياني الشهري\r\n    const calculateLastMonthStats = useCallback((reports) => {\r\n        const now = new Date();\r\n        // طريقة أكثر دقة لحساب تاريخ \"قبل شهر\"\r\n        const oneMonthAgo = new Date(now);\r\n        oneMonthAgo.setMonth(oneMonthAgo.getMonth() - 1);\r\n        // معالجة الحالات الطرفية (مثل 31 مارس -> 3 مارس بدلاً من 31 فبراير)\r\n        if (oneMonthAgo.getDate() !== now.getDate()) {\r\n            oneMonthAgo.setDate(0); // الانتقال إلى آخر يوم في الشهر السابق\r\n        }\r\n\r\n        // تصفية التقارير التي تقع ضمن آخر شهر\r\n        const monthlyReports = reports.filter(report => {\r\n            const reportDate = report.reportDate?.toDate ? report.reportDate.toDate() : new Date(report.reportDate);\r\n            return reportDate >= oneMonthAgo && reportDate <= now;\r\n        });\r\n\r\n        if (monthlyReports.length === 0) return null;\r\n\r\n        let totalPagesMemorized = 0;\r\n        let totalPartsRevised = 0;\r\n        let totalAttendanceDays = 0;\r\n        let totalRating = 0;\r\n        let ratingCount = 0;\r\n\r\n        monthlyReports.forEach(report => {\r\n            totalPagesMemorized += report.pagesMemorized || 0;\r\n            totalPartsRevised += report.partsRevised || 0;\r\n            totalAttendanceDays += report.attendanceDays || 0;\r\n            if (report.rating !== undefined && report.rating !== null) {\r\n                totalRating += report.rating;\r\n                ratingCount++;\r\n            }\r\n        });\r\n\r\n        const averageRating = ratingCount > 0 ? (totalRating / ratingCount).toFixed(2) : 0;\r\n\r\n        // طريقة أكثر دقة لتجميع البيانات أسبوعيًا\r\n        const getStartOfWeek = (date) => {\r\n            const d = new Date(date);\r\n            const day = d.getDay(); // 0 = Sunday\r\n            const diff = d.getDate() - day;\r\n            return new Date(d.setDate(diff));\r\n        };\r\n\r\n        const weeklyMemorization = {}; // { 'YYYY-MM-DD': totalPages }\r\n        monthlyReports.forEach(report => {\r\n            const reportDate = report.reportDate.toDate();\r\n            const weekKey = getStartOfWeek(reportDate).toISOString().split('T')[0];\r\n            weeklyMemorization[weekKey] = (weeklyMemorization[weekKey] || 0) + (report.pagesMemorized || 0);\r\n        });\r\n\r\n        const sortedWeeks = Object.keys(weeklyMemorization).sort();\r\n        // عرض التاريخ بشكل أوضح في الرسم البياني\r\n        const chartLabels = sortedWeeks.map(weekKey => new Date(weekKey).toLocaleDateString('ar-EG', { month: 'short', day: 'numeric' }));\r\n        const chartDataPoints = sortedWeeks.map(week => weeklyMemorization[week]);\r\n\r\n        const newLastMonthChartData = {\r\n            labels: chartLabels,\r\n            datasets: [\r\n                {\r\n                    label: 'الصفحات المحفوظة (شهريًا)',\r\n                    data: chartDataPoints,\r\n                    backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n                    borderColor: 'rgba(75, 192, 192, 1)',\r\n                    borderWidth: 1,\r\n                    tension: 0.3, // لجعل الخط منحنيًا قليلاً\r\n                    pointBackgroundColor: 'rgba(75, 192, 192, 1)',\r\n                    pointBorderColor: '#fff',\r\n                    pointHoverBackgroundColor: '#fff',\r\n                    pointHoverBorderColor: 'rgba(75, 192, 192, 1)',\r\n                },\r\n            ],\r\n        };\r\n\r\n        return {\r\n            totalPagesMemorized,\r\n            totalPartsRevised,\r\n            totalAttendanceDays,\r\n            averageRating: parseFloat(averageRating),\r\n            lastMonthChartData: newLastMonthChartData,\r\n        };\r\n    }, []);\r\n\r\n    // دالة لمعالجة البحث عن الطالب\r\n    const handleSearch = useCallback(async (e) => {\r\n        e.preventDefault();\r\n        dispatch({ type: 'SEARCH_START' });\r\n\r\n        if (!searchTerm.trim()) {\r\n            dispatch({ type: 'SEARCH_FAILURE', payload: \"يرجى إدخال اسم الطالب للبحث.\" });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // 1. البحث عن الطالب بالاسم\r\n            const studentsQuery = query(collection(db, \"students\"), where(\"name\", \"==\", searchTerm.trim()));\r\n            const studentsSnapshot = await getDocs(studentsQuery);\r\n\r\n            if (studentsSnapshot.empty) {\r\n                dispatch({ type: 'SEARCH_NOT_FOUND', payload: \"لم يتم العثور على طالب بهذا الاسم.\" });\r\n                return;\r\n            }\r\n\r\n            // تم العثور على الطالب\r\n            const foundStudentData = studentsSnapshot.docs[0].data();\r\n            const foundStudentId = studentsSnapshot.docs[0].id;\r\n            let foundStudent = { id: foundStudentId, ...foundStudentData };\r\n\r\n            // 2. جلب اسم الحلقة المرتبطة بالطالب\r\n            if (foundStudent.halaqaId) {\r\n                const halaqaDocRef = doc(db, \"halaqat\", foundStudent.halaqaId);\r\n                const halaqaDocSnap = await getDoc(halaqaDocRef);\r\n                if (halaqaDocSnap.exists()) {\r\n                    foundStudent.halaqaName = halaqaDocSnap.data().name;\r\n                } else {\r\n                    foundStudent.halaqaName = \"غير محددة\"; // في حال عدم العثور على الحلقة\r\n                }\r\n            } else {\r\n                foundStudent.halaqaName = \"غير محددة\"; // إذا لم يكن هناك halaqaId\r\n            }\r\n\r\n            // 3. جلب تقارير الطالب الأسبوعية\r\n            const reportsQuery = query(\r\n                collection(db, \"weeklyReports\"),\r\n                where(\"studentId\", \"==\", foundStudent.id),\r\n                orderBy(\"reportDate\", \"desc\") // ترتيب تنازلي للحصول على الأحدث أولاً\r\n            );\r\n            const reportsSnapshot = await getDocs(reportsQuery);\r\n            const allReports = reportsSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n\r\n            // 4. معالجة آخر تقرير أسبوعي\r\n            let lastWeekReport = null, lastWeekChartData = null;\r\n            if (allReports.length > 0) {\r\n                lastWeekReport = allReports[0];\r\n\r\n                // تهيئة بيانات الرسم البياني لآخر أسبوع (رسم بياني شريطي)\r\n                lastWeekChartData = {\r\n                    labels: ['صفحات محفوطة', 'أجزاء مراجعة', 'أيام حضور', 'تقييم'],\r\n                    datasets: [\r\n                        {\r\n                            label: 'التقرير الأسبوعي الأخير',\r\n                            data: [\r\n                                latestReport.pagesMemorized || 0,\r\n                                latestReport.partsRevised || 0,\r\n                                latestReport.attendanceDays || 0,\r\n                                latestReport.rating || 0\r\n                            ],\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 0.6)', // أحمر\r\n                                'rgba(54, 162, 235, 0.6)', // أزرق\r\n                                'rgba(255, 206, 86, 0.6)', // أصفر\r\n                                'rgba(75, 192, 192, 0.6)', // أخضر\r\n                            ],\r\n                            borderColor: [\r\n                                'rgba(255, 99, 132, 1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                            ],\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                };\r\n            }\r\n\r\n            // 5. حساب إحصائيات آخر شهر والرسالة التحفيزية\r\n            const statsResult = calculateLastMonthStats(allReports);\r\n\r\n            dispatch({\r\n                type: 'SEARCH_SUCCESS',\r\n                payload: {\r\n                    student: foundStudent,\r\n                    allReports,\r\n                    lastWeekReport,\r\n                    lastWeekChartData,\r\n                    lastMonthStats: statsResult,\r\n                    lastMonthChartData: statsResult ? statsResult.lastMonthChartData : null,\r\n                    motivationalMessage: getMotivationalMessage(statsResult),\r\n                }\r\n            });\r\n\r\n        } catch (err) {\r\n            console.error(\"Error searching student:\", err);\r\n            dispatch({ type: 'SEARCH_FAILURE', payload: \"حدث خطأ أثناء البحث عن الطالب: \" + err.message });\r\n        }\r\n    }, [searchTerm, calculateLastMonthStats, getMotivationalMessage]); // dispatch is stable\r\n\r\n    return (\r\n        <div className=\"student-search-guest-container page-container\">\r\n            <h2 className=\"student-search-guest-title\">بحث عن طالب</h2>\r\n\r\n            <form onSubmit={handleSearch} className=\"search-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"أدخل اسم الطالب للبحث...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"search-input\"\r\n                    disabled={loading}\r\n                />\r\n                <button type=\"submit\" className=\"search-button\" disabled={loading}>\r\n                    {loading ? \"جاري البحث...\" : \"بحث\"}\r\n                </button>\r\n            </form>\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            {message && <p className=\"info-message\">{message}</p>}\r\n\r\n            {student && !loading && (\r\n                <div className=\"student-details-section card\">\r\n                    <h3>بيانات الطالب: {student.name}</h3>\r\n                    <p><strong>الحلقة:</strong> {student.halaqaName || 'غير محددة'}</p> {/* سيتم عرض اسم الحلقة هنا */}\r\n                    <p><strong>الجنس:</strong> {student.gender}</p>\r\n                    <p><strong>الحفظ الحالي:</strong> {student.memorization || 'لا يوجد'}</p>\r\n                    <p className=\"motivational-message\">{motivationalMessage}</p>\r\n\r\n                    {lastWeekReport && (\r\n                        <div className=\"last-week-report-card\">\r\n                            <h4>آخر تقرير أسبوعي ({new Date(lastWeekReport.reportDate.toDate()).toLocaleDateString('ar-EG', { year: 'numeric', month: 'long', day: 'numeric' })})</h4>\r\n                            <div className=\"report-stats-grid\">\r\n                                <div className=\"stat-item\">\r\n                                    <h5>صفحات محفوطة</h5>\r\n                                    <p>{lastWeekReport.pagesMemorized || 0}</p>\r\n                                </div>\r\n                                <div className=\"stat-item\">\r\n                                    <h5>أجزاء مراجعة</h5>\r\n                                    <p>{lastWeekReport.partsRevised || 0}</p>\r\n                                </div>\r\n                                <div className=\"stat-item\">\r\n                                    <h5>أيام حضور</h5>\r\n                                    <p>{lastWeekReport.attendanceDays || 0}</p>\r\n                                </div>\r\n                                <div className=\"stat-item\">\r\n                                    <h5>التقييم</h5>\r\n                                    <p>{lastWeekReport.rating || 0}/100</p>\r\n                                </div>\r\n                            </div>\r\n                            {lastWeekChartData && (\r\n                                <div className=\"chart-container\">\r\n                                    <Bar data={lastWeekChartData} options={{ responsive: true, maintainAspectRatio: false }} />\r\n                                </div>\r\n                            )}\r\n                            <p className=\"report-notes\"><strong>ملاحظات:</strong> {lastWeekReport.notes || 'لا توجد ملاحظات.'}</p>\r\n                        </div>\r\n                    )}\r\n\r\n                    {lastMonthStats && (\r\n                        <div className=\"last-month-stats-card\">\r\n                            <h4>إحصائيات آخر شهر</h4>\r\n                            <div className=\"stat-cards-grid\">\r\n                                <div className=\"stat-card\">\r\n                                    <h5>إجمالي الحفظ</h5>\r\n                                    <p>{lastMonthStats.totalPagesMemorized}</p>\r\n                                </div>\r\n                                <div className=\"stat-card\">\r\n                                    <h5>إجمالي المراجعة</h5>\r\n                                    <p>{lastMonthStats.totalPartsRevised}</p>\r\n                                </div>\r\n                                <div className=\"stat-card\">\r\n                                    <h5>إجمالي الحضور</h5>\r\n                                    <p>{lastMonthStats.totalAttendanceDays}</p>\r\n                                </div>\r\n                                <div className=\"stat-card\">\r\n                                    <h5>متوسط التقييم</h5>\r\n                                    <p>{lastMonthStats.averageRating}/100</p>\r\n                                </div>\r\n                            </div>\r\n                            {lastMonthChartData && (\r\n                                <div className=\"chart-container\">\r\n                                    <Line data={lastMonthChartData} options={{ responsive: true, maintainAspectRatio: false }} />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n\r\n                    {allReports.length > 1 && (\r\n                        <div className=\"previous-reports-section card\">\r\n                            <h4>التقارير السابقة</h4>\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"reports-table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>التاريخ</th>\r\n                                            <th>صفحات الحفظ</th>\r\n                                            <th>أجزاء المراجعة</th>\r\n                                            <th>أيام الحضور</th>\r\n                                            <th>التقييم</th>\r\n                                            <th>ملاحظات</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {allReports.slice(1).map(report => ( // slice(1) to skip the latest report already shown\r\n                                            <tr key={report.id}>\r\n                                                <td>{new Date(report.reportDate.toDate()).toLocaleDateString('ar-EG')}</td>\r\n                                                <td>{report.pagesMemorized || 0}</td>\r\n                                                <td>{report.partsRevised || 0}</td>\r\n                                                <td>{report.attendanceDays || 0}</td>\r\n                                                <td>{report.rating || 0}/100</td>\r\n                                                <td>{report.notes || 'لا يوجد'}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {!lastWeekReport && !lastMonthStats && (\r\n                        <p className=\"info-message\">لا توجد بيانات تقارير مفصلة لهذا الطالب بعد.</p>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"names":["_ref","isOpen","title","message","children","onConfirm","onCancel","showCancelButton","closeOnOverlayClick","modalRef","useRef","useEffect","_modalRef$current","current","focus","handleEscape","event","key","document","addEventListener","removeEventListener","_jsx","className","onClick","e","contains","target","_jsxs","ref","role","tabIndex","id","ChartJS","register","CategoryScale","LinearScale","BarElement","PointElement","LineElement","Title","Tooltip","Legend","initialState","loading","error","student","allReports","lastWeekReport","lastMonthStats","lastWeekChartData","lastMonthChartData","motivationalMessage","searchReducer","state","action","type","payload","StudentSearchGuest","searchTerm","setSearchTerm","useState","dispatch","useReducer","getMotivationalMessage","useCallback","stats","averageRating","totalPagesMemorized","totalPartsRevised","calculateLastMonthStats","reports","now","Date","oneMonthAgo","setMonth","getMonth","getDate","setDate","monthlyReports","filter","report","_report$reportDate","reportDate","toDate","length","totalAttendanceDays","totalRating","ratingCount","forEach","pagesMemorized","partsRevised","attendanceDays","undefined","rating","toFixed","weeklyMemorization","weekKey","date","d","day","getDay","diff","getStartOfWeek","toISOString","split","sortedWeeks","Object","keys","sort","newLastMonthChartData","labels","map","toLocaleDateString","month","datasets","label","data","week","backgroundColor","borderColor","borderWidth","tension","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","parseFloat","handleSearch","async","preventDefault","trim","studentsQuery","query","collection","db","where","studentsSnapshot","getDocs","empty","foundStudentData","docs","foundStudent","halaqaId","halaqaDocRef","doc","halaqaDocSnap","getDoc","exists","halaqaName","name","reportsQuery","orderBy","latestReport","statsResult","err","console","onSubmit","placeholder","value","onChange","disabled","gender","memorization","year","Bar","options","responsive","maintainAspectRatio","notes","Line","slice"],"sourceRoot":""}