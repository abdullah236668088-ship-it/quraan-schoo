{"version":3,"file":"static/js/139.e820d0e0.chunk.js","mappings":"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","sources":["components/RegisterPage.js","components/CustomModal.js"],"sourcesContent":["// src/pages/RegisterPage.js\r\nimport React, { useState, useCallback } from 'react'; // إضافة useCallback\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport '../Styles/AuthForm.css'; // Reuse existing styles or create new ones\r\nimport CustomModal from '../components/CustomModal'; // استيراد مكون المودال المخصص\r\n\r\nexport default function RegisterPage() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState(''); // رسالة للنجاح\r\n    const { register } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    // حالات المودال\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalConfig, setModalConfig] = useState({});\r\n\r\n    // دالة للتحقق من صحة تنسيق البريد الإلكتروني\r\n    const isValidEmail = (email) => {\r\n        return /\\S+@\\S+\\.\\S+/.test(email);\r\n    };\r\n\r\n    const handleSubmit = useCallback(async (e) => {\r\n        e.preventDefault();\r\n        setError(''); // مسح الأخطاء السابقة\r\n        setMessage(''); // مسح الرسائل السابقة\r\n\r\n        if (!isValidEmail(email)) {\r\n            setError(\"يرجى إدخال بريد إلكتروني صحيح.\");\r\n            return;\r\n        }\r\n\r\n        if (password !== confirmPassword) {\r\n            return setError('كلمتا المرور غير متطابقتين.');\r\n        }\r\n\r\n        if (password.length < 6) {\r\n            return setError('يجب أن تكون كلمة المرور 6 أحرف على الأقل.');\r\n        }\r\n\r\n        setLoading(true); // بدء التحميل\r\n        try {\r\n            await register(email, password);\r\n            // بدلاً من alert، استخدم CustomModal\r\n            setModalConfig({\r\n                title: \"تسجيل ناجح\",\r\n                message: \"تم تسجيل حسابك بنجاح! يمكنك الآن تسجيل الدخول.\",\r\n                onConfirm: () => {\r\n                    setShowModal(false);\r\n                    navigate('/login'); // التوجيه إلى صفحة تسجيل الدخول بعد تأكيد المودال\r\n                },\r\n                showCancelButton: false, // لا حاجة لزر الإلغاء هنا\r\n            });\r\n            setShowModal(true);\r\n        } catch (err) {\r\n            console.error(\"Registration error:\", err);\r\n            // Firebase error codes for user-friendly messages\r\n            if (err.code === 'auth/email-already-in-use') {\r\n                setError('هذا البريد الإلكتروني مستخدم بالفعل.');\r\n            } else if (err.code === 'auth/invalid-email') {\r\n                setError('تنسيق البريد الإلكتروني غير صالح.');\r\n            } else if (err.code === 'auth/weak-password') {\r\n                setError('كلمة المرور ضعيفة جدًا. يرجى اختيار كلمة مرور أقوى.');\r\n            } else {\r\n                setError('فشل التسجيل. يرجى المحاولة مرة أخرى.');\r\n            }\r\n        } finally {\r\n            setLoading(false); // إنهاء التحميل\r\n        }\r\n    }, [email, password, confirmPassword, register, navigate]);\r\n\r\n    return (\r\n        <div className=\"auth-container\">\r\n            <div className=\"auth-form-card\">\r\n                <h2 className=\"auth-title\">تسجيل حساب جديد</h2>\r\n                <form onSubmit={handleSubmit} className=\"auth-form\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">البريد الإلكتروني:</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                            className=\"form-input\"\r\n                            disabled={loading}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">كلمة المرور:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                            className=\"form-input\"\r\n                            disabled={loading}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"confirm-password\">تأكيد كلمة المرور:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirm-password\"\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            required\r\n                            className=\"form-input\"\r\n                            disabled={loading}\r\n                        />\r\n                    </div>\r\n                    {error && <div className=\"error-message\">{error}</div>}\r\n                    {message && <div className=\"success-message\">{message}</div>} {/* لعرض رسائل النجاح */}\r\n                    <button type=\"submit\" disabled={loading} className=\"auth-button\">\r\n                        {loading ? 'جاري التسجيل...' : 'تسجيل'}\r\n                    </button>\r\n                </form>\r\n                <div className=\"auth-link\">\r\n                    لديك حساب بالفعل؟ <Link to=\"/login\">تسجيل الدخول</Link>\r\n                </div>\r\n            </div>\r\n\r\n            {/* مودال التأكيد/النجاح */}\r\n            <CustomModal\r\n                isOpen={showModal}\r\n                title={modalConfig.title}\r\n                message={modalConfig.message}\r\n                onConfirm={modalConfig.onConfirm}\r\n                onCancel={modalConfig.onCancel}\r\n                showCancelButton={modalConfig.showCancelButton}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","// src/components/CustomModal.js\r\nimport React, { useEffect, useRef } from 'react';\r\nimport '../Styles/CustomModalStyles.css';\r\n\r\nconst CustomModal = ({ isOpen, title, message, children, onConfirm, onCancel, showCancelButton = true, closeOnOverlayClick = false }) => {\r\n    const modalRef = useRef(null);\r\n\r\n    // Effect to manage focus and keyboard accessibility\r\n    // تأثير لإدارة التركيز وإمكانية الوصول عبر لوحة المفاتيح\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            // Focus the modal content when it opens\r\n            // تركيز محتوى المودال عند فتحه\r\n            modalRef.current?.focus();\r\n\r\n            // Add event listener for Escape key to close modal\r\n            // إضافة مستمع حدث لمفتاح Escape لإغلاق المودال\r\n            const handleEscape = (event) => {\r\n                if (event.key === 'Escape') {\r\n                    onCancel(); // Use onCancel to close the modal\r\n                }\r\n            };\r\n            document.addEventListener('keydown', handleEscape);\r\n\r\n            // Cleanup function to remove event listener\r\n            // دالة تنظيف لإزالة مستمع الحدث\r\n            return () => {\r\n                document.removeEventListener('keydown', handleEscape);\r\n            };\r\n        }\r\n    }, [isOpen, onCancel]);\r\n\r\n    // If modal is not open, return null to render nothing\r\n    // إذا لم يكن المودال مفتوحًا، أعد قيمة null لعدم عرض أي شيء\r\n    if (!isOpen) return null;\r\n\r\n    // Handle overlay click to close modal if allowed\r\n    // معالجة النقر على الخلفية لإغلاق المودال إذا كان مسموحًا\r\n    const handleOverlayClick = (e) => {\r\n        if (closeOnOverlayClick && modalRef.current && !modalRef.current.contains(e.target)) {\r\n            onCancel();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-overlay\" onClick={handleOverlayClick}>\r\n            <div\r\n                className=\"modal-content\"\r\n                ref={modalRef}\r\n                role=\"dialog\" // ARIA role for dialog\r\n                aria-modal=\"true\" // Indicates that the dialog is modal\r\n                aria-labelledby=\"modal-title\" // Links to the title for accessibility\r\n                aria-describedby=\"modal-message\" // Links to the message for accessibility\r\n                tabIndex=\"-1\" // Makes the modal content focusable\r\n            >\r\n                <h3 id=\"modal-title\" className=\"modal-title\">{title}</h3>\r\n                {message && <p id=\"modal-message\" className=\"modal-message\">{message}</p>}\r\n                {children && <div className=\"modal-body\">{children}</div>} {/* عرض المحتوى المخصص */}\r\n                <div className=\"modal-actions\">\r\n                    <button onClick={onConfirm} className=\"modal-confirm-button\">\r\n                        تأكيد\r\n                    </button>\r\n                    {showCancelButton && (\r\n                        <button onClick={onCancel} className=\"modal-cancel-button\">\r\n                            إلغاء\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomModal;\r\n"],"names":["RegisterPage","email","setEmail","useState","password","setPassword","confirmPassword","setConfirmPassword","error","setError","loading","setLoading","message","setMessage","register","useAuth","navigate","useNavigate","showModal","setShowModal","modalConfig","setModalConfig","handleSubmit","useCallback","async","e","preventDefault","test","isValidEmail","length","title","onConfirm","showCancelButton","err","console","code","_jsxs","className","children","_jsx","onSubmit","htmlFor","type","id","value","onChange","target","required","disabled","Link","to","CustomModal","isOpen","onCancel","_ref","closeOnOverlayClick","modalRef","useRef","useEffect","_modalRef$current","current","focus","handleEscape","event","key","document","addEventListener","removeEventListener","onClick","contains","ref","role","tabIndex"],"sourceRoot":""}