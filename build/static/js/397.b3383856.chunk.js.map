{"version":3,"file":"static/js/397.b3383856.chunk.js","mappings":"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","sources":["components/CustomModal.js","components/HalaqaItem.js","components/AddHalaqaForm.js","components/HalaqatPage.js"],"sourcesContent":["// src/components/CustomModal.js\r\nimport React, { useEffect, useRef } from 'react';\r\nimport '../Styles/CustomModalStyles.css';\r\n\r\nconst CustomModal = ({ isOpen, title, message, children, onConfirm, onCancel, showCancelButton = true, closeOnOverlayClick = false }) => {\r\n    const modalRef = useRef(null);\r\n\r\n    // Effect to manage focus and keyboard accessibility\r\n    // تأثير لإدارة التركيز وإمكانية الوصول عبر لوحة المفاتيح\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            // Focus the modal content when it opens\r\n            // تركيز محتوى المودال عند فتحه\r\n            modalRef.current?.focus();\r\n\r\n            // Add event listener for Escape key to close modal\r\n            // إضافة مستمع حدث لمفتاح Escape لإغلاق المودال\r\n            const handleEscape = (event) => {\r\n                if (event.key === 'Escape') {\r\n                    onCancel(); // Use onCancel to close the modal\r\n                }\r\n            };\r\n            document.addEventListener('keydown', handleEscape);\r\n\r\n            // Cleanup function to remove event listener\r\n            // دالة تنظيف لإزالة مستمع الحدث\r\n            return () => {\r\n                document.removeEventListener('keydown', handleEscape);\r\n            };\r\n        }\r\n    }, [isOpen, onCancel]);\r\n\r\n    // If modal is not open, return null to render nothing\r\n    // إذا لم يكن المودال مفتوحًا، أعد قيمة null لعدم عرض أي شيء\r\n    if (!isOpen) return null;\r\n\r\n    // Handle overlay click to close modal if allowed\r\n    // معالجة النقر على الخلفية لإغلاق المودال إذا كان مسموحًا\r\n    const handleOverlayClick = (e) => {\r\n        if (closeOnOverlayClick && modalRef.current && !modalRef.current.contains(e.target)) {\r\n            onCancel();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-overlay\" onClick={handleOverlayClick}>\r\n            <div\r\n                className=\"modal-content\"\r\n                ref={modalRef}\r\n                role=\"dialog\" // ARIA role for dialog\r\n                aria-modal=\"true\" // Indicates that the dialog is modal\r\n                aria-labelledby=\"modal-title\" // Links to the title for accessibility\r\n                aria-describedby=\"modal-message\" // Links to the message for accessibility\r\n                tabIndex=\"-1\" // Makes the modal content focusable\r\n            >\r\n                <h3 id=\"modal-title\" className=\"modal-title\">{title}</h3>\r\n                {message && <p id=\"modal-message\" className=\"modal-message\">{message}</p>}\r\n                {children && <div className=\"modal-body\">{children}</div>} {/* عرض المحتوى المخصص */}\r\n                <div className=\"modal-actions\">\r\n                    <button onClick={onConfirm} className=\"modal-confirm-button\">\r\n                        تأكيد\r\n                    </button>\r\n                    {showCancelButton && (\r\n                        <button onClick={onCancel} className=\"modal-cancel-button\">\r\n                            إلغاء\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomModal;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\n\r\n/**\r\n * مكون لعرض وتعديل حلقة واحدة.\r\n * @param {object} props - الخصائص الممررة للمكون.\r\n * @param {object} props.halaqa - بيانات الحلقة (id, name, teacherId, teacherName).\r\n * @param {boolean} props.isEditing - لتحديد ما إذا كان المكون في وضع التعديل.\r\n * @param {function} props.onEdit - دالة يتم استدعاؤها عند الضغط على زر التعديل.\r\n * @param {function} props.onDelete - دالة يتم استدعاؤها عند الضغط على زر الحذف.\r\n * @param {function} props.onSave - دالة يتم استدعاؤها عند حفظ التعديلات.\r\n * @param {function} props.onCancel - دالة يتم استدعاؤها عند إلغاء التعديل.\r\n * @param {Array} props.teachers - قائمة بالمعلمين المتاحين.\r\n * @param {string} props.userRole - دور المستخدم الحالي (e.g., 'admin').\r\n * @param {boolean} props.loading - لتحديد ما إذا كانت هناك عملية جارية (لتعطيل الأزرار).\r\n */\r\nconst HalaqaItem = ({ halaqa, isEditing, onEdit, onDelete, onSave, onCancel, teachers, userRole, loading }) => {\r\n    const [editedName, setEditedName] = useState(halaqa.name);\r\n    const [editedTeacherId, setEditedTeacherId] = useState(halaqa.teacherId || \"\");\r\n\r\n    // استخدام useEffect لمزامنة الحالة الداخلية مع الـ props عند تغييرها\r\n    useEffect(() => {\r\n        if (isEditing) {\r\n            setEditedName(halaqa.name);\r\n            setEditedTeacherId(halaqa.teacherId || \"\");\r\n        }\r\n    }, [halaqa, isEditing]);\r\n\r\n    const handleSave = useCallback(() => {\r\n        onSave(halaqa.id, editedName, editedTeacherId);\r\n    }, [halaqa.id, editedName, editedTeacherId, onSave]);\r\n\r\n    if (isEditing) {\r\n        return (\r\n            // نموذج التعديل\r\n            <div className=\"edit-halaqa-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={editedName}\r\n                    onChange={(e) => setEditedName(e.target.value)}\r\n                    className=\"edit-halaqa-input\"\r\n                    required\r\n                />\r\n                {userRole === \"admin\" && (\r\n                    <select\r\n                        value={editedTeacherId}\r\n                        onChange={(e) => setEditedTeacherId(e.target.value)}\r\n                        className=\"edit-halaqa-select-teacher\"\r\n                        required\r\n                    >\r\n                        <option value=\"\">اختر المعلم</option>\r\n                        {teachers.map((teacher) => (\r\n                            <option key={teacher.id} value={teacher.id}>\r\n                                {teacher.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                )}\r\n                <button onClick={handleSave} className=\"save-button\" disabled={loading}>\r\n                    {loading ? \"جاري الحفظ...\" : \"حفظ\"}\r\n                </button>\r\n                <button onClick={onCancel} className=\"cancel-button\" disabled={loading}>\r\n                    إلغاء\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"halaqa-details\">\r\n                <span>{halaqa.name} ({halaqa.teacherName || 'لا يوجد معلم'})</span>\r\n            </div>\r\n            <div className=\"halaqa-actions\">\r\n                <button onClick={() => onEdit(halaqa)} className=\"edit-button\">تعديل</button>\r\n                <button onClick={() => onDelete(halaqa.id)} className=\"delete-button\">حذف</button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n// استخدام React.memo لتحسين الأداء عن طريق منع إعادة العرض غير الضرورية\r\nexport default React.memo(HalaqaItem);\r\n","// src/components/AddHalaqaForm.js\r\nimport React, { useCallback } from 'react';\r\nimport '../Styles/HalaqatPageStyles.css'; // استيراد التنسيقات المشتركة\r\n\r\n/**\r\n * مكون لنموذج إضافة حلقة جديدة.\r\n * @param {object} props - الخصائص الممررة للمكون.\r\n * @param {string} props.newHalaqaName - اسم الحلقة الجديدة.\r\n * @param {function} props.setNewHalaqaName - دالة لتحديث اسم الحلقة الجديدة.\r\n * @param {string} props.selectedTeacherId - معرف المعلم المختار للحلقة الجديدة.\r\n * @param {function} props.setSelectedTeacherId - دالة لتحديث معرف المعلم المختار.\r\n * @param {Array} props.teachers - قائمة بالمعلمين المتاحين.\r\n * @param {string} props.userRole - دور المستخدم الحالي (e.g., 'admin', 'teacher').\r\n * @param {boolean} props.loading - لتحديد ما إذا كانت هناك عملية جارية (لتعطيل الأزرار).\r\n * @param {function} props.onAddHalaqa - دالة يتم استدعاؤها عند إضافة حلقة جديدة.\r\n * @param {string} props.error - رسالة الخطأ لعرضها.\r\n * @param {string} props.message - رسالة النجاح لعرضها.\r\n */\r\nconst AddHalaqaForm = ({\r\n    newHalaqaName,\r\n    setNewHalaqaName,\r\n    selectedTeacherId,\r\n    setSelectedTeacherId,\r\n    teachers,\r\n    userRole,\r\n    loading,\r\n    onAddHalaqa,\r\n    error, // يمكن تمرير الخطأ والرسالة لعرضها داخل النموذج إذا لزم الأمر\r\n    message\r\n}) => {\r\n    // استخدام useCallback لضمان استقرار الدالة ومنع إعادة الإنشاء غير الضرورية\r\n    const handleAddClick = useCallback(() => {\r\n        onAddHalaqa();\r\n    }, [onAddHalaqa]);\r\n\r\n    // إذا لم يكن المستخدم مسؤولاً أو معلمًا، لا تعرض النموذج\r\n    if (userRole !== \"admin\" && userRole !== \"teacher\") {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-halaqa-section card\">\r\n            <h3>إضافة حلقة جديدة</h3>\r\n            {error && <p className=\"error-message\">{error}</p>} {/* عرض الخطأ هنا */}\r\n            {message && <p className=\"success-message\">{message}</p>} {/* عرض الرسالة هنا */}\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"اسم الحلقة الجديدة\"\r\n                value={newHalaqaName}\r\n                onChange={(e) => setNewHalaqaName(e.target.value)}\r\n                className=\"new-halaqa-input\"\r\n                required\r\n            />\r\n            {userRole === \"admin\" && ( // عرض قائمة اختيار المعلم للمدير فقط\r\n                <select\r\n                    value={selectedTeacherId}\r\n                    onChange={(e) => setSelectedTeacherId(e.target.value)}\r\n                    className=\"new-halaqa-select-teacher\"\r\n                    required\r\n                >\r\n                    <option value=\"\">اختر المعلم</option>\r\n                    {teachers.map((teacher) => (\r\n                        <option key={teacher.id} value={teacher.id}>\r\n                            {teacher.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            )}\r\n            <button onClick={handleAddClick} className=\"add-halaqa-button\" disabled={loading}>\r\n                {loading ? \"جاري الإضافة...\" : \"إضافة حلقة جديدة\"}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(AddHalaqaForm); // استخدام React.memo لتحسين الأداء\r\n// لتحسين الأداء ومنع إعادة التقديم غير الضرورية\r\n// يمكن استخدام React.memo إذا كان المكون يتلقى خصائص لا تتغير كثيرًا            ","// src/pages/HalaqatPage.js\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport { db } from \"../firebaseConfig\";\r\nimport {\r\n    collection,\r\n    query,\r\n    where,\r\n    addDoc,\r\n    updateDoc,\r\n    deleteDoc,\r\n    doc,\r\n    onSnapshot // استيراد onSnapshot\r\n} from \"firebase/firestore\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport '../Styles/HalaqatPageStyles.css';\r\nimport CustomModal from '../components/CustomModal';\r\nimport HalaqaItem from '../components/HalaqaItem';\r\nimport AddHalaqaForm from '../components/AddHalaqaForm'; // استيراد مكون AddHalaqaForm\r\n\r\nexport default function HalaqatPage() {\r\n    const { currentUser, userRole, loading: authLoading } = useAuth();\r\n    const [halaqat, setHalaqat] = useState([]);\r\n    const [teachers, setTeachers] = useState([]);\r\n    const [newHalaqaName, setNewHalaqaName] = useState(\"\");\r\n    const [selectedTeacherId, setSelectedTeacherId] = useState(\"\");\r\n    const [editingHalaqaId, setEditingHalaqaId] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalConfig, setModalConfig] = useState({});\r\n\r\n    // useEffect للاستماع للتغييرات في الحلقات والمعلمين باستخدام onSnapshot\r\n    useEffect(() => {\r\n        if (authLoading || !currentUser) {\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError(\"\");\r\n\r\n        let halaqaUnsubscribe;\r\n        let teachersUnsubscribe;\r\n\r\n        try {\r\n            // الاستماع إلى تغييرات المعلمين\r\n            teachersUnsubscribe = onSnapshot(collection(db, \"teachers\"), (snapshot) => {\r\n                const teachersList = [];\r\n                snapshot.forEach((doc) => {\r\n                    teachersList.push({ id: doc.id, ...doc.data() });\r\n                });\r\n                setTeachers(teachersList);\r\n                setLoading(false);\r\n            }, (err) => {\r\n                console.error(\"Error fetching teachers:\", err);\r\n                setError(\"فشل في جلب المعلمين: \" + err.message);\r\n                setLoading(false);\r\n            });\r\n\r\n            // الاستماع إلى تغييرات الحلقات بناءً على دور المستخدم\r\n            let halaqatQueryRef;\r\n            if (userRole === \"teacher\") {\r\n                halaqatQueryRef = query(collection(db, \"halaqat\"), where(\"teacherId\", \"==\", currentUser.uid));\r\n            } else if (userRole === \"admin\") {\r\n                halaqatQueryRef = collection(db, \"halaqat\");\r\n            } else {\r\n                setHalaqat([]);\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            halaqaUnsubscribe = onSnapshot(halaqatQueryRef, (snapshot) => {\r\n                const halaqatList = [];\r\n                snapshot.forEach((doc) => {\r\n                    halaqatList.push({ id: doc.id, ...doc.data() });\r\n                });\r\n                setHalaqat(halaqatList);\r\n                setLoading(false);\r\n            }, (err) => {\r\n                console.error(\"Error fetching halaqat:\", err);\r\n                setError(\"فشل في جلب الحلقات: \" + err.message);\r\n                setLoading(false);\r\n            });\r\n\r\n        } catch (err) {\r\n            console.error(\"Error setting up listeners:\", err);\r\n            setError(\"حدث خطأ أثناء إعداد مستمعي البيانات: \" + err.message);\r\n            setLoading(false);\r\n        }\r\n\r\n        return () => {\r\n            if (halaqaUnsubscribe) halaqaUnsubscribe();\r\n            if (teachersUnsubscribe) teachersUnsubscribe();\r\n        };\r\n    }, [currentUser, userRole, authLoading]);\r\n\r\n    // دالة لإضافة حلقة جديدة (تم نقلها إلى هنا لتظل في المكون الأب الذي يدير الحالة)\r\n    const handleAddHalaqa = useCallback(async () => {\r\n        setError(\"\");\r\n        setMessage(\"\");\r\n        if (!newHalaqaName.trim()) {\r\n            setError(\"يرجى إدخال اسم الحلقة.\");\r\n            return;\r\n        }\r\n        if (userRole === \"admin\" && !selectedTeacherId) {\r\n            setError(\"يرجى اختيار معلم للحلقة.\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            const teacherName = userRole === \"teacher\"\r\n                ? (teachers.find(t => t.id === currentUser.uid)?.name || \"غير معروف\")\r\n                : (teachers.find(t => t.id === selectedTeacherId)?.name || \"غير معروف\");\r\n\r\n            const halaqaData = {\r\n                name: newHalaqaName,\r\n                teacherId: userRole === \"teacher\" ? currentUser.uid : selectedTeacherId,\r\n                teacherName: teacherName\r\n            };\r\n            await addDoc(collection(db, \"halaqat\"), halaqaData);\r\n            setNewHalaqaName(\"\");\r\n            setSelectedTeacherId(\"\");\r\n            setMessage(\"تم إضافة الحلقة بنجاح!\");\r\n        } catch (err) {\r\n            console.error(\"Error adding halaqa:\", err);\r\n            setError(\"فشل في إضافة الحلقة: \" + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [newHalaqaName, selectedTeacherId, userRole, currentUser, teachers]);\r\n\r\n    // دالة لبدء تعديل الحلقة\r\n    const handleEditClick = useCallback((halaqa) => {\r\n        setEditingHalaqaId(halaqa.id);\r\n        setError(\"\");\r\n        setMessage(\"\");\r\n    }, []);\r\n\r\n    // دالة لحفظ التعديلات على الحلقة\r\n    const handleSaveEdit = useCallback(async (id, editedName, editedTeacherId) => {\r\n        setError(\"\");\r\n        setMessage(\"\");\r\n        if (!editedName.trim()) {\r\n            setError(\"يرجى إدخال اسم الحلقة.\");\r\n            return;\r\n        }\r\n        if (userRole === \"admin\" && !editedTeacherId) {\r\n            setError(\"يرجى اختيار معلم للحلقة.\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            const halaqaDocRef = doc(db, \"halaqat\", id);\r\n            const teacherName = userRole === \"teacher\"\r\n                ? (teachers.find(t => t.id === currentUser.uid)?.name || \"غير معروف\")\r\n                : (teachers.find(t => t.id === editedTeacherId)?.name || \"غير معروف\");\r\n\r\n            const updatedData = {\r\n                name: editedName,\r\n                teacherId: userRole === \"teacher\" ? currentUser.uid : editedTeacherId,\r\n                teacherName: teacherName\r\n            };\r\n            await updateDoc(halaqaDocRef, updatedData);\r\n            setEditingHalaqaId(null);\r\n            setMessage(\"تم تحديث الحلقة بنجاح!\");\r\n        } catch (err) {\r\n            console.error(\"Error updating halaqa:\", err);\r\n            setError(\"فشل في تحديث الحلقة: \" + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [userRole, currentUser, teachers]);\r\n\r\n    // دالة لإلغاء التعديل\r\n    const handleCancelEdit = useCallback(() => {\r\n        setEditingHalaqaId(null);\r\n        setError(\"\");\r\n        setMessage(\"\");\r\n    }, []);\r\n\r\n    // دالة لحذف حلقة\r\n    const handleDeleteHalaqa = useCallback((id) => {\r\n        setModalConfig({\r\n            title: \"تأكيد الحذف\",\r\n            message: \"هل أنت متأكد أنك تريد حذف هذه الحلقة؟ (ملاحظة: حذف الطلاب المرتبطين يجب أن يتم عبر Cloud Function لضمان الأمان).\",\r\n            onConfirm: async () => {\r\n                setShowModal(false);\r\n                setLoading(true);\r\n                setError(\"\");\r\n                setMessage(\"\");\r\n                try {\r\n                    await deleteDoc(doc(db, \"halaqat\", id));\r\n                    setMessage(\"تم حذف الحلقة بنجاح! (تأكد من إعداد Cloud Function لحذف الطلاب المرتبطين).\");\r\n                } catch (err) {\r\n                    console.error(\"Error deleting halaqa:\", err);\r\n                    setError(\"فشل في حذف الحلقة: \" + err.message);\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            },\r\n            onCancel: () => setShowModal(false),\r\n            showCancelButton: true,\r\n        });\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n    if (userRole !== \"admin\" && userRole !== \"teacher\") {\r\n        return <div className=\"unauthorized-message\">ليس لديك الصلاحية للوصول إلى هذه الصفحة.</div>;\r\n    }\r\n\r\n    if (loading) {\r\n        return <p className=\"loading-message\">جاري تحميل الحلقات...</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"halaqat-page-container page-container\">\r\n            <h2 className=\"halaqat-page-title\">إدارة الحلقات</h2>\r\n\r\n            {/* عرض رسائل الخطأ والنجاح العامة للصفحة */}\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            {message && <p className=\"success-message\">{message}</p>}\r\n\r\n            <div className=\"halaqat-list-section card\">\r\n                <h3>الحلقات الحالية</h3>\r\n                {halaqat.length === 0 ? (\r\n                    <p className=\"no-data-message\">لا توجد حلقات لعرضها.</p>\r\n                ) : (\r\n                    <ul className=\"halaqat-list\">\r\n                        {halaqat.map((halaqa) => (\r\n                            <li key={halaqa.id} className=\"halaqa-item-wrapper\">\r\n                                <HalaqaItem\r\n                                    halaqa={halaqa}\r\n                                    isEditing={editingHalaqaId === halaqa.id}\r\n                                    onEdit={handleEditClick}\r\n                                    onDelete={handleDeleteHalaqa}\r\n                                    onSave={handleSaveEdit}\r\n                                    onCancel={handleCancelEdit}\r\n                                    teachers={teachers}\r\n                                    userRole={userRole}\r\n                                    loading={loading}\r\n                                />\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n\r\n            {/* استخدام المكون الجديد AddHalaqaForm */}\r\n            <AddHalaqaForm\r\n                newHalaqaName={newHalaqaName}\r\n                setNewHalaqaName={setNewHalaqaName}\r\n                selectedTeacherId={selectedTeacherId}\r\n                setSelectedTeacherId={setSelectedTeacherId}\r\n                teachers={teachers}\r\n                userRole={userRole}\r\n                loading={loading}\r\n                onAddHalaqa={handleAddHalaqa}\r\n            // لا نمرر error و message هنا لأنهما رسائل عامة للصفحة،\r\n            // ولكن يمكن تمريرهما إذا أردت عرض رسائل خاصة بالنموذج\r\n            />\r\n\r\n            {/* مودال التأكيد */}\r\n            <CustomModal\r\n                isOpen={showModal}\r\n                title={modalConfig.title}\r\n                message={modalConfig.message}\r\n                onConfirm={modalConfig.onConfirm}\r\n                onCancel={modalConfig.onCancel}\r\n                showCancelButton={modalConfig.showCancelButton}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n"],"names":["_ref","isOpen","title","message","children","onConfirm","onCancel","showCancelButton","closeOnOverlayClick","modalRef","useRef","useEffect","_modalRef$current","current","focus","handleEscape","event","key","document","addEventListener","removeEventListener","_jsx","className","onClick","e","contains","target","_jsxs","ref","role","tabIndex","id","HalaqaItem","halaqa","isEditing","onEdit","onDelete","onSave","teachers","userRole","loading","editedName","setEditedName","useState","name","editedTeacherId","setEditedTeacherId","teacherId","handleSave","useCallback","type","value","onChange","required","map","teacher","disabled","_Fragment","teacherName","React","AddHalaqaForm","newHalaqaName","setNewHalaqaName","selectedTeacherId","setSelectedTeacherId","onAddHalaqa","error","handleAddClick","placeholder","HalaqatPage","currentUser","authLoading","useAuth","halaqat","setHalaqat","setTeachers","editingHalaqaId","setEditingHalaqaId","setLoading","setError","setMessage","showModal","setShowModal","modalConfig","setModalConfig","halaqaUnsubscribe","teachersUnsubscribe","halaqatQueryRef","onSnapshot","collection","db","snapshot","teachersList","forEach","doc","push","data","err","console","query","where","uid","halaqatList","handleAddHalaqa","async","trim","_teachers$find","_teachers$find2","find","t","halaqaData","addDoc","handleEditClick","handleSaveEdit","_teachers$find3","_teachers$find4","halaqaDocRef","updatedData","updateDoc","handleCancelEdit","handleDeleteHalaqa","deleteDoc","length","CustomModal"],"sourceRoot":""}