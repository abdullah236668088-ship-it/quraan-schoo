{"version":3,"file":"static/js/765.9f211247.chunk.js","mappings":"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","sources":["components/CustomModal.js","components/UserManagement.js"],"sourcesContent":["// src/components/CustomModal.js\r\nimport React, { useEffect, useRef } from 'react';\r\nimport '../Styles/CustomModalStyles.css';\r\n\r\nconst CustomModal = ({ isOpen, title, message, children, onConfirm, onCancel, showCancelButton = true, closeOnOverlayClick = false }) => {\r\n    const modalRef = useRef(null);\r\n\r\n    // Effect to manage focus and keyboard accessibility\r\n    // تأثير لإدارة التركيز وإمكانية الوصول عبر لوحة المفاتيح\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            // Focus the modal content when it opens\r\n            // تركيز محتوى المودال عند فتحه\r\n            modalRef.current?.focus();\r\n\r\n            // Add event listener for Escape key to close modal\r\n            // إضافة مستمع حدث لمفتاح Escape لإغلاق المودال\r\n            const handleEscape = (event) => {\r\n                if (event.key === 'Escape') {\r\n                    onCancel(); // Use onCancel to close the modal\r\n                }\r\n            };\r\n            document.addEventListener('keydown', handleEscape);\r\n\r\n            // Cleanup function to remove event listener\r\n            // دالة تنظيف لإزالة مستمع الحدث\r\n            return () => {\r\n                document.removeEventListener('keydown', handleEscape);\r\n            };\r\n        }\r\n    }, [isOpen, onCancel]);\r\n\r\n    // If modal is not open, return null to render nothing\r\n    // إذا لم يكن المودال مفتوحًا، أعد قيمة null لعدم عرض أي شيء\r\n    if (!isOpen) return null;\r\n\r\n    // Handle overlay click to close modal if allowed\r\n    // معالجة النقر على الخلفية لإغلاق المودال إذا كان مسموحًا\r\n    const handleOverlayClick = (e) => {\r\n        if (closeOnOverlayClick && modalRef.current && !modalRef.current.contains(e.target)) {\r\n            onCancel();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-overlay\" onClick={handleOverlayClick}>\r\n            <div\r\n                className=\"modal-content\"\r\n                ref={modalRef}\r\n                role=\"dialog\" // ARIA role for dialog\r\n                aria-modal=\"true\" // Indicates that the dialog is modal\r\n                aria-labelledby=\"modal-title\" // Links to the title for accessibility\r\n                aria-describedby=\"modal-message\" // Links to the message for accessibility\r\n                tabIndex=\"-1\" // Makes the modal content focusable\r\n            >\r\n                <h3 id=\"modal-title\" className=\"modal-title\">{title}</h3>\r\n                {message && <p id=\"modal-message\" className=\"modal-message\">{message}</p>}\r\n                {children && <div className=\"modal-body\">{children}</div>} {/* عرض المحتوى المخصص */}\r\n                <div className=\"modal-actions\">\r\n                    <button onClick={onConfirm} className=\"modal-confirm-button\">\r\n                        تأكيد\r\n                    </button>\r\n                    {showCancelButton && (\r\n                        <button onClick={onCancel} className=\"modal-cancel-button\">\r\n                            إلغاء\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomModal;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { db, auth } from \"../firebaseConfig\";\r\nimport {\r\n    collection,\r\n    getDocs,\r\n    addDoc,\r\n    updateDoc,\r\n    deleteDoc,\r\n    doc,\r\n    query,\r\n    where,\r\n    onSnapshot, // إضافة onSnapshot\r\n} from \"firebase/firestore\";\r\nimport { createUserWithEmailAndPassword, sendPasswordResetEmail } from \"firebase/auth\"; // إضافة sendPasswordResetEmail\r\nimport { useAuth } from \"../contexts/AuthContext\"; // استيراد useAuth\r\nimport CustomModal from './CustomModal'; // استيراد مكون المودال المخصص\r\nimport '../Styles/UserManagementStyles.css'; // استيراد ملف التنسيقات الخارجي\r\n\r\nexport default function UserManagement() {\r\n    const { getAllUsers, updateUserRole, currentUser, userRole } = useAuth(); // جلب الوظائف وحالة المستخدم\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const [formMode, setFormMode] = useState(\"add\"); // 'add' or 'edit'\r\n    const [formData, setFormData] = useState({\r\n        id: \"\",\r\n        email: \"\",\r\n        password: \"\", // فقط للإضافة\r\n        name: \"\",\r\n        role: \"guest\",\r\n        associatedHalaqat: [], // for teachers\r\n        associatedStudents: [], // for guests\r\n        isBlocked: false, // حقل جديد للحظر\r\n    });\r\n    const [halaqatList, setHalaqatList] = useState([]);\r\n    const [studentsList, setStudentsList] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [activeTab, setActiveTab] = useState('manageUsers'); // حالة لتبديل بين إدارة المستخدمين وإضافة مستخدم\r\n\r\n    // حالات المودال\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalConfig, setModalConfig] = useState({});\r\n\r\n    // جلب الحلقات والطلاب (لربطهم بالمستخدمين)\r\n    const fetchAssociatedData = useCallback(async () => {\r\n        try {\r\n            const [halaqatSnapshot, studentsSnapshot] = await Promise.all([\r\n                getDocs(collection(db, \"halaqat\")),\r\n                getDocs(collection(db, \"students\"))\r\n            ]);\r\n            setHalaqatList(halaqatSnapshot.docs.map(doc => ({ id: doc.id, name: doc.data().name })));\r\n            setStudentsList(studentsSnapshot.docs.map(doc => ({ id: doc.id, name: doc.data().name })));\r\n        } catch (err) {\r\n            console.error(\"Error fetching associated data:\", err);\r\n            setError(\"فشل في جلب بيانات الحلقات والطلاب: \" + err.message);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (userRole !== 'admin') {\r\n            setLoading(false);\r\n            setError('ليس لديك الصلاحية للوصول إلى هذه الصفحة.');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError('');\r\n\r\n        // جلب البيانات المرتبطة مرة واحدة\r\n        fetchAssociatedData();\r\n\r\n        // استخدام onSnapshot لجلب المستخدمين في الوقت الفعلي\r\n        const usersCollectionRef = collection(db, \"users\");\r\n        const unsubscribe = onSnapshot(usersCollectionRef, (snapshot) => {\r\n            const fetchedUsers = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n            // تصفية المستخدم الحالي من القائمة إذا كان مديراً\r\n            setUsers(fetchedUsers.filter(user => user.id !== currentUser.uid));\r\n            setLoading(false);\r\n        }, (err) => {\r\n            console.error(\"Error fetching users in real-time:\", err);\r\n            setError('فشل جلب المستخدمين: ' + err.message);\r\n            setLoading(false);\r\n        });\r\n\r\n        return () => unsubscribe(); // إلغاء الاشتراك عند إلغاء تحميل المكون\r\n    }, [userRole, currentUser, fetchAssociatedData]);\r\n\r\n\r\n    const handleInputChange = useCallback((e) => {\r\n        const { name, value, options } = e.target;\r\n        if (name === \"associatedHalaqat\" || name === \"associatedStudents\") {\r\n            // التعامل مع تحديدات متعددة لـ select\r\n            const selectedValues = Array.from(options)\r\n                .filter(option => option.selected)\r\n                .map(option => option.value);\r\n            setFormData(prev => ({ ...prev, [name]: selectedValues }));\r\n        } else {\r\n            setFormData(prev => ({ ...prev, [name]: value }));\r\n        }\r\n    }, []);\r\n\r\n    const resetForm = useCallback(() => {\r\n        setFormMode(\"add\");\r\n        setFormData({\r\n            id: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            name: \"\",\r\n            role: \"guest\",\r\n            associatedHalaqat: [],\r\n            associatedStudents: [],\r\n            isBlocked: false,\r\n        });\r\n        setError(\"\");\r\n        setMessage(\"\");\r\n    }, []);\r\n\r\n    const handleAddUser = useCallback(async (e) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n        setMessage(\"\");\r\n        setLoading(true);\r\n\r\n        if (!formData.email || !formData.password || !formData.name || !formData.role) {\r\n            setError(\"الرجاء ملء جميع الحقول المطلوبة.\");\r\n            setLoading(false);\r\n            return;\r\n        }\r\n        if (formData.password.length < 6) {\r\n            setError(\"كلمة المرور يجب أن تكون 6 أحرف على الأقل.\");\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // إنشاء المستخدم في Firebase Authentication\r\n            const userCredential = await createUserWithEmailAndPassword(auth, formData.email, formData.password);\r\n            const newUserUid = userCredential.user.uid;\r\n\r\n            // حفظ بيانات المستخدم في Firestore\r\n            const userData = {\r\n                name: formData.name,\r\n                email: formData.email,\r\n                role: formData.role,\r\n                createdAt: new Date(),\r\n                isBlocked: false, // افتراضياً غير محظور عند الإنشاء\r\n            };\r\n\r\n            if (formData.role === \"teacher\") {\r\n                userData.associatedHalaqat = formData.associatedHalaqat;\r\n            } else if (formData.role === \"guest\") {\r\n                userData.associatedStudents = formData.associatedStudents;\r\n            }\r\n\r\n            await setDoc(doc(db, \"users\", newUserUid), userData);\r\n            setMessage(\"تم إضافة المستخدم بنجاح!\");\r\n            resetForm();\r\n            setActiveTab('manageUsers'); // العودة إلى تبويب الإدارة\r\n        } catch (err) {\r\n            console.error(\"Error adding user:\", err);\r\n            if (err.code === 'auth/email-already-in-use') {\r\n                setError('هذا البريد الإلكتروني مستخدم بالفعل.');\r\n            } else {\r\n                setError('فشل في إضافة المستخدم: ' + err.message);\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [formData, resetForm]);\r\n\r\n    const handleEditClick = useCallback((user) => {\r\n        setFormMode(\"edit\");\r\n        setFormData({\r\n            id: user.id,\r\n            email: user.email,\r\n            password: \"\", // لا تعرض كلمة المرور الحالية للتعديل\r\n            name: user.name,\r\n            role: user.role,\r\n            associatedHalaqat: user.associatedHalaqat || [],\r\n            associatedStudents: user.associatedStudents || [],\r\n            isBlocked: user.isBlocked || false,\r\n        });\r\n        setActiveTab('addUser'); // الانتقال إلى تبويب إضافة/تعديل المستخدم\r\n        window.scrollTo({ top: 0, behavior: 'smooth' }); // التمرير لأعلى النموذج\r\n    }, []);\r\n\r\n    const handleUpdateUser = useCallback(async (e) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n        setMessage(\"\");\r\n        setLoading(true);\r\n\r\n        if (!formData.name || !formData.role) {\r\n            setError(\"الرجاء ملء جميع الحقول المطلوبة.\");\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const userDocRef = doc(db, \"users\", formData.id);\r\n            const updatedData = {\r\n                name: formData.name,\r\n                role: formData.role,\r\n                isBlocked: formData.isBlocked,\r\n            };\r\n\r\n            // تحديث الروابط بناءً على الدور الجديد\r\n            if (formData.role === \"teacher\") {\r\n                updatedData.associatedHalaqat = formData.associatedHalaqat;\r\n                updatedData.associatedStudents = []; // مسح روابط الطلاب إذا لم يعد ضيفاً\r\n            } else if (formData.role === \"guest\") {\r\n                updatedData.associatedStudents = formData.associatedStudents;\r\n                updatedData.associatedHalaqat = []; // مسح روابط الحلقات إذا لم يعد معلماً\r\n            } else { // admin\r\n                updatedData.associatedHalaqat = [];\r\n                updatedData.associatedStudents = [];\r\n            }\r\n\r\n            await updateDoc(userDocRef, updatedData);\r\n            setMessage(\"تم تحديث المستخدم بنجاح!\");\r\n            resetForm();\r\n            setActiveTab('manageUsers'); // العودة إلى تبويب الإدارة\r\n        } catch (err) {\r\n            console.error(\"Error updating user:\", err);\r\n            setError(\"فشل في تحديث المستخدم: \" + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [formData, resetForm]);\r\n\r\n    // دالة لتغيير صلاحية المستخدم (من جدول المستخدمين)\r\n    const handleRoleChange = useCallback(async (userId, newRole) => {\r\n        setError(\"\");\r\n        setMessage(\"\");\r\n        setLoading(true);\r\n        try {\r\n            // جلب المستخدم لتحديث الحقول المرتبطة بشكل صحيح\r\n            // ملاحظة: استخدام getDocs مع query(where(doc.id, \"==\", userId)) ليس الأمثل لجلب وثيقة واحدة بمعرفها.\r\n            // الأفضل هو استخدام doc(db, \"users\", userId) ثم getDoc(userDocRef).\r\n            const userDocRef = doc(db, \"users\", userId);\r\n            const userDocSnap = await getDoc(userDocRef); // استخدام getDoc مباشرة\r\n\r\n            if (!userDocSnap.exists()) {\r\n                setError(\"المستخدم غير موجود.\");\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            const userData = userDocSnap.data();\r\n\r\n            const updatedData = {\r\n                role: newRole,\r\n            };\r\n\r\n            // مسح الروابط القديمة وإضافة الجديدة بناءً على الدور الجديد\r\n            if (newRole === \"teacher\") {\r\n                updatedData.associatedStudents = [];\r\n            } else if (newRole === \"guest\") {\r\n                updatedData.associatedHalaqat = [];\r\n            } else { // admin\r\n                updatedData.associatedHalaqat = [];\r\n                updatedData.associatedStudents = [];\r\n            }\r\n\r\n            await updateDoc(userDocRef, updatedData);\r\n            setMessage(`تم تغيير صلاحية المستخدم ${userData.name || userData.email} إلى ${newRole} بنجاح!`);\r\n        } catch (err) {\r\n            console.error(\"Error updating user role:\", err);\r\n            setError(\"فشل في تحديث صلاحية المستخدم: \" + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    // دالة لإعادة تعيين كلمة مرور المستخدم\r\n    const handlePasswordReset = useCallback((email) => {\r\n        setModalConfig({\r\n            title: \"إعادة تعيين كلمة المرور\",\r\n            message: `هل أنت متأكد أنك تريد إرسال بريد إلكتروني لإعادة تعيين كلمة المرور إلى ${email}؟`,\r\n            onConfirm: async () => {\r\n                setShowModal(false);\r\n                setLoading(true);\r\n                setError(\"\");\r\n                setMessage(\"\");\r\n                try {\r\n                    await sendPasswordResetEmail(auth, email);\r\n                    setMessage(`تم إرسال رابط إعادة تعيين كلمة المرور إلى ${email} بنجاح.`);\r\n                } catch (err) {\r\n                    console.error(\"Error sending password reset email:\", err);\r\n                    setError(\"فشل في إرسال رابط إعادة تعيين كلمة المرور: \" + err.message);\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            },\r\n            onCancel: () => setShowModal(false),\r\n            showCancelButton: true,\r\n        });\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n    // دالة لتغيير حالة الحظر للمستخدم\r\n    const toggleUserBlockStatus = useCallback((user) => {\r\n        setModalConfig({\r\n            title: user.isBlocked ? \"إلغاء حظر المستخدم\" : \"حظر المستخدم\",\r\n            message: `هل أنت متأكد أنك تريد ${user.isBlocked ? \"إلغاء حظر\" : \"حظر\"} المستخدم ${user.name || user.email}؟`,\r\n            onConfirm: async () => {\r\n                setShowModal(false);\r\n                setLoading(true);\r\n                setError(\"\");\r\n                setMessage(\"\");\r\n                try {\r\n                    const userDocRef = doc(db, \"users\", user.id);\r\n                    await updateDoc(userDocRef, { isBlocked: !user.isBlocked });\r\n                    setMessage(`تم ${user.isBlocked ? \"إلغاء حظر\" : \"حظر\"} المستخدم ${user.name || user.email} بنجاح.`);\r\n                } catch (err) {\r\n                    console.error(\"Error toggling block status:\", err);\r\n                    setError(\"فشل في تحديث حالة الحظر: \" + err.message);\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            },\r\n            onCancel: () => setShowModal(false),\r\n            showCancelButton: true,\r\n        });\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n    // دالة لحذف المستخدم\r\n    const handleDeleteUser = useCallback((user) => {\r\n        setModalConfig({\r\n            title: \"حذف المستخدم\",\r\n            message: `هل أنت متأكد أنك تريد حذف المستخدم ${user.name || user.email}؟ هذا الإجراء لا يمكن التراجع عنه. (ملاحظة: هذا سيحذف بيانات المستخدم من قاعدة البيانات، ولكن حذف الحساب من Firebase Authentication يتطلب صلاحيات إدارية على الخادم).`,\r\n            onConfirm: async () => {\r\n                setShowModal(false);\r\n                setLoading(true);\r\n                setError(\"\");\r\n                setMessage(\"\");\r\n                try {\r\n                    // حذف مستند المستخدم من Firestore\r\n                    await deleteDoc(doc(db, \"users\", user.id));\r\n\r\n                    // ملاحظة: حذف المستخدم من Firebase Authentication يجب أن يتم عبر Firebase Admin SDK\r\n                    // مثال (ليس جزءًا من هذا الكود، يتطلب Cloud Function):\r\n                    // await admin.auth().deleteUser(user.id);\r\n\r\n                    setMessage(`تم حذف بيانات المستخدم ${user.name || user.email} من قاعدة البيانات بنجاح.`);\r\n                } catch (err) {\r\n                    console.error(\"Error deleting user:\", err);\r\n                    setError(\"فشل في حذف المستخدم: \" + err.message);\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            },\r\n            onCancel: () => setShowModal(false),\r\n            showCancelButton: true,\r\n        });\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n\r\n    if (userRole !== 'admin') {\r\n        return <p className=\"unauthorized-message\">ليس لديك الصلاحية للوصول إلى هذه الصفحة.</p>;\r\n    }\r\n\r\n    if (loading) {\r\n        return <p className=\"loading-message\">جاري تحميل بيانات المستخدمين...</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-management-container page-container\">\r\n            <h2 className=\"user-management-title\">إدارة المستخدمين</h2>\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            {message && <p className=\"success-message\">{message}</p>}\r\n\r\n            <div className=\"tabs\">\r\n                <button\r\n                    className={`tab-button ${activeTab === 'manageUsers' ? 'active' : ''}`}\r\n                    onClick={() => setActiveTab('manageUsers')}\r\n                >\r\n                    إدارة المستخدمين\r\n                </button>\r\n                <button\r\n                    className={`tab-button ${activeTab === 'addUser' ? 'active' : ''}`}\r\n                    onClick={() => { setActiveTab('addUser'); resetForm(); }}\r\n                >\r\n                    إضافة مستخدم جديد\r\n                </button>\r\n            </div>\r\n\r\n            {activeTab === 'manageUsers' && (\r\n                <div className=\"users-list-section card\">\r\n                    <h3>المستخدمون المسجلون</h3>\r\n                    {users.length === 0 ? (\r\n                        <p className=\"no-data-message\">لا يوجد مستخدمون لعرضهم.</p>\r\n                    ) : (\r\n                        <div className=\"users-table-container\">\r\n                            <table className=\"users-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>الاسم</th>\r\n                                        <th>البريد الإلكتروني</th>\r\n                                        <th>الصلاحية</th>\r\n                                        <th>معرف المستخدم (UID)</th>\r\n                                        <th>الحالة</th>\r\n                                        <th>الإجراءات</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {users.map((user) => (\r\n                                        <tr key={user.id}>\r\n                                            <td>{user.name || 'غير متوفر'}</td>\r\n                                            <td>{user.email || 'غير متوفر'}</td>\r\n                                            <td>\r\n                                                <select\r\n                                                    value={user.role}\r\n                                                    onChange={(e) => handleRoleChange(user.id, e.target.value)}\r\n                                                    className=\"role-select\"\r\n                                                    disabled={loading}\r\n                                                >\r\n                                                    <option value=\"guest\">زائر</option>\r\n                                                    <option value=\"teacher\">معلم</option>\r\n                                                    <option value=\"admin\">مدير</option>\r\n                                                </select>\r\n                                            </td>\r\n                                            <td>{user.id}</td>\r\n                                            <td>\r\n                                                <span className={`status-badge ${user.isBlocked ? 'blocked' : 'active'}`}>\r\n                                                    {user.isBlocked ? 'محظور' : 'نشط'}\r\n                                                </span>\r\n                                            </td>\r\n                                            <td className=\"actions-cell\">\r\n                                                <button\r\n                                                    onClick={() => handleEditClick(user)}\r\n                                                    className=\"edit-button\"\r\n                                                    disabled={loading}\r\n                                                >\r\n                                                    تعديل\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handlePasswordReset(user.email)}\r\n                                                    className=\"reset-password-button\"\r\n                                                    disabled={loading}\r\n                                                >\r\n                                                    إعادة تعيين كلمة المرور\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => toggleUserBlockStatus(user)}\r\n                                                    className={`toggle-block-button ${user.isBlocked ? 'unblock' : 'block'}`}\r\n                                                    disabled={loading}\r\n                                                >\r\n                                                    {user.isBlocked ? 'إلغاء الحظر' : 'حظر'}\r\n                                                </button>\r\n                                                <button\r\n                                                    onClick={() => handleDeleteUser(user)}\r\n                                                    className=\"delete-button\"\r\n                                                    disabled={loading}\r\n                                                >\r\n                                                    حذف\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {activeTab === 'addUser' && (\r\n                <div className=\"add-user-section card\">\r\n                    <h3>{formMode === \"add\" ? \"إضافة مستخدم جديد\" : \"تعديل مستخدم\"}</h3>\r\n                    <form onSubmit={formMode === \"add\" ? handleAddUser : handleUpdateUser} className=\"user-form\">\r\n                        <div className=\"form-grid\">\r\n                            <div className=\"form-group\">\r\n                                <label>البريد الإلكتروني:</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={formData.email}\r\n                                    onChange={handleInputChange}\r\n                                    className=\"form-input\"\r\n                                    required\r\n                                    disabled={formMode === \"edit\"} // البريد الإلكتروني لا يمكن تعديله\r\n                                />\r\n                            </div>\r\n                            {formMode === \"add\" && (\r\n                                <div className=\"form-group\">\r\n                                    <label>كلمة المرور:</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        value={formData.password}\r\n                                        onChange={handleInputChange}\r\n                                        className=\"form-input\"\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                            <div className=\"form-group\">\r\n                                <label>الاسم:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    value={formData.name}\r\n                                    onChange={handleInputChange}\r\n                                    className=\"form-input\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>الصلاحية:</label>\r\n                                <select\r\n                                    name=\"role\"\r\n                                    value={formData.role}\r\n                                    onChange={handleInputChange}\r\n                                    className=\"form-select\"\r\n                                    required\r\n                                >\r\n                                    <option value=\"guest\">زائر</option>\r\n                                    <option value=\"teacher\">معلم</option>\r\n                                    <option value=\"admin\">مدير</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            {formData.role === \"teacher\" && (\r\n                                <div className=\"form-group full-width\">\r\n                                    <label>الحلقات المرتبطة (للمعلمين):</label>\r\n                                    <select\r\n                                        name=\"associatedHalaqat\"\r\n                                        multiple\r\n                                        value={formData.associatedHalaqat}\r\n                                        onChange={handleInputChange}\r\n                                        size={halaqatList.length > 5 ? 5 : halaqatList.length || 1}\r\n                                    >\r\n                                        {halaqatList.map((halaqa) => (\r\n                                            <option key={halaqa.id} value={halaqa.id}>\r\n                                                {halaqa.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            )}\r\n\r\n                            {formData.role === \"guest\" && (\r\n                                <div className=\"form-group full-width\">\r\n                                    <label>الطلاب المرتبطون (لأولياء الأمور/الضيوف):</label>\r\n                                    <select\r\n                                        name=\"associatedStudents\"\r\n                                        multiple\r\n                                        value={formData.associatedStudents}\r\n                                        onChange={handleInputChange}\r\n                                        size={studentsList.length > 5 ? 5 : studentsList.length || 1}\r\n                                    >\r\n                                        {studentsList.map((student) => (\r\n                                            <option key={student.id} value={student.id}>\r\n                                                {student.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            )}\r\n                            {formMode === \"edit\" && (\r\n                                <div className=\"form-group\">\r\n                                    <label>حالة الحظر:</label>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        name=\"isBlocked\"\r\n                                        checked={formData.isBlocked}\r\n                                        onChange={(e) => setFormData(prev => ({ ...prev, isBlocked: e.target.checked }))}\r\n                                        className=\"form-checkbox\"\r\n                                    />\r\n                                    <span className=\"checkbox-label\">{formData.isBlocked ? 'محظور' : 'نشط'}</span>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form-actions\">\r\n                            <button type=\"submit\" className=\"submit-button\" disabled={loading}>\r\n                                {loading ? (formMode === \"add\" ? \"جاري الإضافة...\" : \"جاري التحديث...\") : (formMode === \"add\" ? \"إضافة\" : \"تحديث\")}\r\n                            </button>\r\n                            {formMode === \"edit\" && (\r\n                                <button type=\"button\" onClick={resetForm} className=\"cancel-button\" disabled={loading}>\r\n                                    إلغاء\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            )}\r\n\r\n            {/* مودال التأكيد */}\r\n            <CustomModal\r\n                isOpen={showModal}\r\n                title={modalConfig.title}\r\n                message={modalConfig.message}\r\n                onConfirm={modalConfig.onConfirm}\r\n                onCancel={modalConfig.onCancel}\r\n                showCancelButton={modalConfig.showCancelButton}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n"],"names":["_ref","isOpen","title","message","children","onConfirm","onCancel","showCancelButton","closeOnOverlayClick","modalRef","useRef","useEffect","_modalRef$current","current","focus","handleEscape","event","key","document","addEventListener","removeEventListener","_jsx","className","onClick","e","contains","target","_jsxs","ref","role","tabIndex","id","UserManagement","getAllUsers","updateUserRole","currentUser","userRole","useAuth","users","setUsers","useState","loading","setLoading","error","setError","formMode","setFormMode","formData","setFormData","email","password","name","associatedHalaqat","associatedStudents","isBlocked","halaqatList","setHalaqatList","studentsList","setStudentsList","setMessage","activeTab","setActiveTab","showModal","setShowModal","modalConfig","setModalConfig","fetchAssociatedData","useCallback","async","halaqatSnapshot","studentsSnapshot","Promise","all","getDocs","collection","db","docs","map","doc","data","err","console","usersCollectionRef","unsubscribe","onSnapshot","snapshot","fetchedUsers","filter","user","uid","handleInputChange","value","options","selectedValues","Array","from","option","selected","prev","resetForm","handleAddUser","preventDefault","length","newUserUid","createUserWithEmailAndPassword","auth","userData","createdAt","Date","setDoc","code","handleEditClick","window","scrollTo","top","behavior","handleUpdateUser","userDocRef","updatedData","updateDoc","handleRoleChange","userId","newRole","userDocSnap","getDoc","exists","handlePasswordReset","sendPasswordResetEmail","toggleUserBlockStatus","handleDeleteUser","deleteDoc","onChange","disabled","onSubmit","type","required","multiple","size","halaqa","student","checked","CustomModal"],"sourceRoot":""}