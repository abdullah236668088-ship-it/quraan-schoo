{"version":3,"file":"static/js/60.812c7537.chunk.js","mappings":"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","sources":["components/CustomModal.js","components/Teachers.js"],"sourcesContent":["// src/components/CustomModal.js\r\nimport React, { useEffect, useRef } from 'react';\r\nimport '../Styles/CustomModalStyles.css';\r\n\r\nconst CustomModal = ({ isOpen, title, message, children, onConfirm, onCancel, showCancelButton = true, closeOnOverlayClick = false }) => {\r\n    const modalRef = useRef(null);\r\n\r\n    // Effect to manage focus and keyboard accessibility\r\n    // تأثير لإدارة التركيز وإمكانية الوصول عبر لوحة المفاتيح\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            // Focus the modal content when it opens\r\n            // تركيز محتوى المودال عند فتحه\r\n            modalRef.current?.focus();\r\n\r\n            // Add event listener for Escape key to close modal\r\n            // إضافة مستمع حدث لمفتاح Escape لإغلاق المودال\r\n            const handleEscape = (event) => {\r\n                if (event.key === 'Escape') {\r\n                    onCancel(); // Use onCancel to close the modal\r\n                }\r\n            };\r\n            document.addEventListener('keydown', handleEscape);\r\n\r\n            // Cleanup function to remove event listener\r\n            // دالة تنظيف لإزالة مستمع الحدث\r\n            return () => {\r\n                document.removeEventListener('keydown', handleEscape);\r\n            };\r\n        }\r\n    }, [isOpen, onCancel]);\r\n\r\n    // If modal is not open, return null to render nothing\r\n    // إذا لم يكن المودال مفتوحًا، أعد قيمة null لعدم عرض أي شيء\r\n    if (!isOpen) return null;\r\n\r\n    // Handle overlay click to close modal if allowed\r\n    // معالجة النقر على الخلفية لإغلاق المودال إذا كان مسموحًا\r\n    const handleOverlayClick = (e) => {\r\n        if (closeOnOverlayClick && modalRef.current && !modalRef.current.contains(e.target)) {\r\n            onCancel();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-overlay\" onClick={handleOverlayClick}>\r\n            <div\r\n                className=\"modal-content\"\r\n                ref={modalRef}\r\n                role=\"dialog\" // ARIA role for dialog\r\n                aria-modal=\"true\" // Indicates that the dialog is modal\r\n                aria-labelledby=\"modal-title\" // Links to the title for accessibility\r\n                aria-describedby=\"modal-message\" // Links to the message for accessibility\r\n                tabIndex=\"-1\" // Makes the modal content focusable\r\n            >\r\n                <h3 id=\"modal-title\" className=\"modal-title\">{title}</h3>\r\n                {message && <p id=\"modal-message\" className=\"modal-message\">{message}</p>}\r\n                {children && <div className=\"modal-body\">{children}</div>} {/* عرض المحتوى المخصص */}\r\n                <div className=\"modal-actions\">\r\n                    <button onClick={onConfirm} className=\"modal-confirm-button\">\r\n                        تأكيد\r\n                    </button>\r\n                    {showCancelButton && (\r\n                        <button onClick={onCancel} className=\"modal-cancel-button\">\r\n                            إلغاء\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomModal;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { db } from \"../firebaseConfig\";\r\nimport { collection, query, where, getDocs, addDoc, updateDoc, deleteDoc, doc, onSnapshot } from \"firebase/firestore\";\r\nimport { useAuth } from \"../contexts/AuthContext\"; // استيراد useAuth للتحقق من الدور\r\nimport CustomModal from './CustomModal'; // استيراد مكون المودال المخصص\r\nimport '../Styles/TeachersStyles.css'; // استيراد ملف التنسيقات الخارجي\r\n\r\nexport default function Teachers() {\r\n    const { userRole } = useAuth(); // جلب دور المستخدم\r\n    const [teachers, setTeachers] = useState([]);\r\n    const [newTeacherName, setNewTeacherName] = useState(\"\");\r\n    const [editingTeacherId, setEditingTeacherId] = useState(null);\r\n    const [editingTeacherName, setEditingTeacherName] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\"); // رسائل النجاح\r\n\r\n    // حالات المودال\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalConfig, setModalConfig] = useState({});\r\n\r\n    useEffect(() => {\r\n        // التحقق من صلاحيات المستخدم: فقط المدير يمكنه الوصول لهذه الصفحة\r\n        if (userRole !== \"admin\") {\r\n            setLoading(false);\r\n            setError(\"ليس لديك الصلاحية للوصول إلى هذه الصفحة.\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError(\"\");\r\n        const teachersCollectionRef = collection(db, \"users\"); // المعلمون هم نوع من المستخدمين\r\n\r\n        // استخدام onSnapshot لجلب التحديثات في الوقت الفعلي\r\n        // فلترة المستخدمين الذين لديهم دور 'teacher'\r\n        const q = query(teachersCollectionRef, where(\"role\", \"==\", \"teacher\"));\r\n\r\n        const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n            const teachersList = [];\r\n            querySnapshot.forEach((doc) => {\r\n                teachersList.push({ id: doc.id, ...doc.data() });\r\n            });\r\n            setTeachers(teachersList);\r\n            setLoading(false);\r\n        }, (err) => {\r\n            console.error(\"Error fetching teachers in real-time:\", err);\r\n            setError(\"فشل في جلب بيانات المعلمين في الوقت الفعلي: \" + err.message);\r\n            setLoading(false);\r\n        });\r\n\r\n        // دالة التنظيف لإلغاء الاشتراك عند إلغاء تحميل المكون\r\n        return () => unsubscribe();\r\n    }, [userRole]); // اعتمادية على userRole\r\n\r\n    const handleAddTeacher = useCallback(async () => {\r\n        setError(\"\");\r\n        setMessage(\"\");\r\n        if (!newTeacherName.trim()) {\r\n            setError(\"يرجى إدخال اسم المعلم.\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            // التحقق من أن اسم المعلم غير مكرر في Firestore\r\n            const q = query(collection(db, \"users\"), where(\"name\", \"==\", newTeacherName.trim()), where(\"role\", \"==\", \"teacher\"));\r\n            const snapshot = await getDocs(q);\r\n            if (!snapshot.empty) {\r\n                setError(\"هذا المعلم موجود بالفعل.\");\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            // إضافة معلم جديد (كمستخدم بدوره 'teacher')\r\n            // ملاحظة: لا يمكن إضافة مستخدمين جدد إلى Firebase Auth مباشرة من هنا.\r\n            // يجب أن يكون المستخدم قد تم تسجيله مسبقًا (مثلاً من صفحة التسجيل) ثم يتم تغيير دوره.\r\n            // أو يمكن ربط عملية إضافة المعلم بعملية إنشاء حساب جديد له.\r\n            // في هذا السياق، نفترض أننا نضيف وثيقة في Firestore فقط.\r\n            // إذا كنت تريد إنشاء حساب مصادقة هنا، سيتطلب ذلك منطقًا إضافيًا لإنشاء المستخدم في Firebase Auth.\r\n            await addDoc(collection(db, \"users\"), {\r\n                name: newTeacherName.trim(),\r\n                role: \"teacher\",\r\n                createdAt: new Date(), // إضافة تاريخ الإنشاء\r\n                // يمكنك إضافة حقول أخرى مثل email, password (إذا تم إنشاؤها عبر Auth)\r\n            });\r\n            setNewTeacherName(\"\");\r\n            setMessage(\"تم إضافة المعلم بنجاح! (تأكد من وجود حساب مصادقة لهذا المعلم)\");\r\n        } catch (err) {\r\n            console.error(\"Error adding teacher:\", err);\r\n            setError(\"فشل في إضافة المعلم: \" + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [newTeacherName]);\r\n\r\n    const handleEditClick = useCallback((teacher) => {\r\n        setEditingTeacherId(teacher.id);\r\n        setEditingTeacherName(teacher.name);\r\n        setError(\"\");\r\n        setMessage(\"\");\r\n    }, []);\r\n\r\n    const handleUpdateTeacher = useCallback(async (teacherId) => {\r\n        setError(\"\");\r\n        setMessage(\"\");\r\n        if (!editingTeacherName.trim()) {\r\n            setError(\"يرجى إدخال اسم المعلم.\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            // التحقق من أن الاسم الجديد ليس مكررًا (باستثناء المعلم نفسه الذي يتم تعديله)\r\n            const q = query(collection(db, \"users\"), where(\"name\", \"==\", editingTeacherName.trim()), where(\"role\", \"==\", \"teacher\"));\r\n            const snapshot = await getDocs(q);\r\n            const isDuplicate = snapshot.docs.some(doc => doc.id !== teacherId);\r\n\r\n            if (isDuplicate) {\r\n                setError(\"هذا المعلم موجود بالفعل.\");\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            const teacherDocRef = doc(db, \"users\", teacherId); // تحديث وثيقة المستخدم (المعلم)\r\n            await updateDoc(teacherDocRef, { name: editingTeacherName.trim() });\r\n\r\n            setMessage(\"تم تحديث المعلم بنجاح!\");\r\n            setEditingTeacherId(null);\r\n            setEditingTeacherName(\"\");\r\n        } catch (err) {\r\n            console.error(\"Error updating teacher:\", err);\r\n            setError(\"فشل في تحديث المعلم: \" + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [editingTeacherName]);\r\n\r\n    const handleDeleteTeacher = useCallback((id) => {\r\n        setModalConfig({\r\n            title: \"تأكيد الحذف\",\r\n            message: \"هل أنت متأكد أنك تريد حذف هذا المعلم؟ سيتم إلغاء ربط جميع الحلقات المرتبطة به. (لا يؤثر هذا على حساب المصادقة الخاص به في Firebase Auth).\",\r\n            onConfirm: async () => {\r\n                setShowModal(false);\r\n                setLoading(true);\r\n                setError(\"\");\r\n                setMessage(\"\");\r\n                try {\r\n                    // 1. تحديث الحلقات لإزالة teacherId\r\n                    const halaqatQuery = query(collection(db, \"halaqat\"), where(\"teacherId\", \"==\", id));\r\n                    const halaqatSnapshot = await getDocs(halaqatQuery);\r\n                    const updateHalaqatPromises = halaqatSnapshot.docs.map(halaqaDoc =>\r\n                        updateDoc(doc(db, \"halaqat\", halaqaDoc.id), { teacherId: null, teacherName: null })\r\n                    );\r\n                    await Promise.all(updateHalaqatPromises);\r\n\r\n                    // 2. تحديث الطلاب لإزالة teacherId (إذا كان موجودًا في وثائق الطلاب)\r\n                    // ملاحظة: في معظم التصميمات، الطالب يرتبط بالحلقة، والحلقة ترتبط بالمعلم.\r\n                    // إذا كان الطالب لا يحتوي على teacherId مباشر، يمكن حذف هذا الجزء.\r\n                    // ولكن إذا كان موجودًا، فمن الجيد تحديثه.\r\n                    const studentsQuery = query(collection(db, \"students\"), where(\"teacherId\", \"==\", id));\r\n                    const studentsSnapshot = await getDocs(studentsQuery);\r\n                    const updateStudentsPromises = studentsSnapshot.docs.map(studentDoc =>\r\n                        updateDoc(doc(db, \"students\", studentDoc.id), { teacherId: null })\r\n                    );\r\n                    await Promise.all(updateStudentsPromises);\r\n\r\n                    // 3. حذف وثيقة المعلم من مجموعة 'users'\r\n                    await deleteDoc(doc(db, \"users\", id)); // حذف وثيقة المستخدم (المعلم)\r\n\r\n                    setMessage(\"تم حذف المعلم وتحديث الحلقات والطلاب المرتبطين بنجاح!\");\r\n                } catch (err) {\r\n                    console.error(\"Error deleting teacher or updating associated data:\", err);\r\n                    setError(\"فشل في حذف المعلم: \" + err.message);\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            },\r\n            onCancel: () => setShowModal(false),\r\n            showCancelButton: true,\r\n        });\r\n        setShowModal(true);\r\n    }, []);\r\n\r\n    // عرض رسالة عدم الصلاحية إذا لم يكن الدور \"أدمن\"\r\n    if (userRole !== \"admin\") {\r\n        return <div className=\"unauthorized-message\">ليس لديك الصلاحية للوصول إلى هذه الصفحة.</div>;\r\n    }\r\n\r\n    if (loading) {\r\n        return <p className=\"loading-message\">جاري تحميل بيانات المعلمين...</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"teachers-container page-container\">\r\n            <h2 className=\"teachers-title\">إدارة المعلمين</h2>\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            {message && <p className=\"success-message\">{message}</p>}\r\n\r\n            <div className=\"teachers-list-section card\">\r\n                <h3>المعلمون الحاليون</h3>\r\n                {teachers.length === 0 ? (\r\n                    <p className=\"no-data-message\">لا يوجد معلمون مسجلون حاليًا.</p>\r\n                ) : (\r\n                    <ul className=\"teachers-list\">\r\n                        {teachers.map((teacher) => (\r\n                            <li key={teacher.id} className=\"teacher-item\">\r\n                                {editingTeacherId === teacher.id ? (\r\n                                    <div className=\"edit-teacher-form\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={editingTeacherName}\r\n                                            onChange={(e) => setEditingTeacherName(e.target.value)}\r\n                                            className=\"edit-teacher-input\"\r\n                                            required\r\n                                        />\r\n                                        <button onClick={() => handleUpdateTeacher(teacher.id)} className=\"save-button\" disabled={loading}>\r\n                                            {loading ? \"جاري الحفظ...\" : \"حفظ\"}\r\n                                        </button>\r\n                                        <button onClick={() => { setEditingTeacherId(null); setError(\"\"); setMessage(\"\"); }} className=\"cancel-button\" disabled={loading}>\r\n                                            إلغاء\r\n                                        </button>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className=\"teacher-details\">\r\n                                        <strong>{teacher.name}</strong>\r\n                                        <div className=\"teacher-actions\">\r\n                                            <button onClick={() => handleEditClick(teacher)} className=\"edit-button\">\r\n                                                تعديل\r\n                                            </button>\r\n                                            <button onClick={() => handleDeleteTeacher(teacher.id)} className=\"delete-button\">\r\n                                                حذف\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"add-teacher-section card\">\r\n                <h3>إضافة معلم جديد</h3>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"اسم المعلم الجديد\"\r\n                    value={newTeacherName}\r\n                    onChange={(e) => setNewTeacherName(e.target.value)}\r\n                    className=\"new-teacher-input\"\r\n                    required\r\n                />\r\n                <button onClick={handleAddTeacher} className=\"add-teacher-button\" disabled={loading}>\r\n                    {loading ? \"جاري الإضافة...\" : \"إضافة معلم جديد\"}\r\n                </button>\r\n            </div>\r\n\r\n            {/* مودال التأكيد */}\r\n            <CustomModal\r\n                isOpen={showModal}\r\n                title={modalConfig.title}\r\n                message={modalConfig.message}\r\n                onConfirm={modalConfig.onConfirm}\r\n                onCancel={modalConfig.onCancel}\r\n                showCancelButton={modalConfig.showCancelButton}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n"],"names":["_ref","isOpen","title","message","children","onConfirm","onCancel","showCancelButton","closeOnOverlayClick","modalRef","useRef","useEffect","_modalRef$current","current","focus","handleEscape","event","key","document","addEventListener","removeEventListener","_jsx","className","onClick","e","contains","target","_jsxs","ref","role","tabIndex","id","Teachers","userRole","useAuth","teachers","setTeachers","useState","newTeacherName","setNewTeacherName","editingTeacherId","setEditingTeacherId","editingTeacherName","setEditingTeacherName","loading","setLoading","error","setError","setMessage","showModal","setShowModal","modalConfig","setModalConfig","teachersCollectionRef","collection","db","q","query","where","unsubscribe","onSnapshot","querySnapshot","teachersList","forEach","doc","push","data","err","console","handleAddTeacher","useCallback","async","trim","getDocs","empty","addDoc","name","createdAt","Date","handleEditClick","teacher","handleUpdateTeacher","snapshot","docs","some","teacherId","teacherDocRef","updateDoc","handleDeleteTeacher","halaqatQuery","updateHalaqatPromises","map","halaqaDoc","teacherName","Promise","all","studentsQuery","updateStudentsPromises","studentDoc","deleteDoc","length","type","value","onChange","required","disabled","placeholder","CustomModal"],"sourceRoot":""}